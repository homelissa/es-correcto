{"version":3,"sources":["../../modules/area-chart/index.js"],"names":["dateParser","AreaChart","data","array","isRequired","width","number","height","xType","string","yType","datePattern","interpolate","style","object","margin","axes","bool","grid","verticalGrid","xDomainRange","yDomainRange","areaColors","noAreaGradient","tickTimeDisplayFormat","yTicks","xTicks","dataPoints","axisLabels","shape","x","y","yAxisOrientRight","mouseOverHandler","func","mouseOutHandler","mouseMoveHandler","clickHandler","props","uid","ref","refs","areaChart","m","w","h","node","Element","setAttribute","left","right","top","bottom","append","attr","root","label","axis","tickFormat","tickSize","tickPadding","ticks","group","call","text","colors","forEach","color","i","gradient","fill","xValue","yValue","getFill","d","getStroke","areaPath","curve","y0","y1","linePath","selectAll","enter","calculateDate","v","parseDate","calculateCX","calculateCY","mouseover","mouseout","mousemove","click","item","datum","on","scope","axisStyles","rules","datePatternParser","concat","createSvgNode","createSvgRoot","hasFill","p","calculateChartParameters","createXAxis","createYAxis","createFill","createAreaPathChart","createPoints","className","createStyle","toReact"],"mappings":"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","file":"index.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport ReactFauxDOM from 'react-faux-dom';\nimport {\n  createUniqueID,\n  reduce,\n  createValueGenerator,\n  calculateMargin,\n  createDomainRangeGenerator,\n  defaultColors,\n  defaultStyles,\n  getAxisStyles,\n  createCircularTicks\n} from '../shared';\nimport {\n  event as lastEvent,\n  select,\n  axisBottom,\n  axisLeft,\n  axisRight,\n  line,\n  area,\n  timeFormat } from 'd3';\nimport interpolateLine from '../interpolate';\nimport PropTypes from 'prop-types';\nimport { Style } from 'radium';\nimport merge from 'lodash.merge';\nimport { timeParse as parse } from 'd3-time-format';\n\nconst dateParser = {};\n\nexport default class AreaChart extends PureComponent {\n  static get propTypes() {\n    return {\n      data: PropTypes.array.isRequired,\n      width: PropTypes.number,\n      height: PropTypes.number,\n      xType: PropTypes.string,\n      yType: PropTypes.string,\n      datePattern: PropTypes.string,\n      interpolate: PropTypes.string,\n      style: PropTypes.object,\n      margin: PropTypes.object,\n      axes: PropTypes.bool,\n      grid: PropTypes.bool,\n      verticalGrid: PropTypes.bool,\n      xDomainRange: PropTypes.array,\n      yDomainRange: PropTypes.array,\n      areaColors: PropTypes.array,\n      noAreaGradient: PropTypes.bool,\n      tickTimeDisplayFormat: PropTypes.string,\n      yTicks: PropTypes.number,\n      xTicks: PropTypes.number,\n      dataPoints: PropTypes.bool,\n      axisLabels: PropTypes.shape({\n        x: PropTypes.string,\n        y: PropTypes.string\n      }),\n      yAxisOrientRight: PropTypes.bool,\n      mouseOverHandler: PropTypes.func,\n      mouseOutHandler: PropTypes.func,\n      mouseMoveHandler: PropTypes.func,\n      clickHandler: PropTypes.func\n    };\n  }\n\n  static get defaultProps() {\n    return {\n      width: 200,\n      height: 150,\n      datePattern: '%d-%b-%y',\n      interpolate: 'linear',\n      axes: false,\n      areaColors: [],\n      xType: 'linear',\n      yType: 'linear',\n      axisLabels: {\n        x: '',\n        y: ''\n      },\n      mouseOverHandler: () => {},\n      mouseOutHandler: () => {},\n      mouseMoveHandler: () => {},\n      clickHandler: () => {}\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    this.uid = createUniqueID(props);\n  }\n\n  componentDidMount() {\n    const ref = this.refs.areaChart;\n    createCircularTicks(ref);\n  }\n\n  componentDidUpdate() {\n    const ref = this.refs.areaChart;\n    createCircularTicks(ref);\n  }\n\n  createSvgNode({ m, w, h }) {\n    const node = new ReactFauxDOM.Element('svg');\n    node.setAttribute('width', w + m.left + m.right);\n    node.setAttribute('height', h + m.top + m.bottom);\n    return node;\n  }\n\n  createSvgRoot({ node, m }) {\n    return select(node)\n      .append('g')\n      .attr('transform', `translate(${m.left}, ${m.top})`);\n  }\n\n  createXAxis({ root, m, w, h, x }) {\n    const {\n      xType,\n      axisLabels: { x: label },\n      xTicks,\n      grid,\n      verticalGrid,\n      tickTimeDisplayFormat,\n      yAxisOrientRight\n    } = this.props;\n\n    const axis = axisBottom(x);\n\n    if (xType === 'time' && tickTimeDisplayFormat) {\n      axis\n        .tickFormat(timeFormat(tickTimeDisplayFormat));\n    }\n    if (grid && verticalGrid) {\n      axis\n        .tickSize(-h, 6)\n        .tickPadding(15);\n    } else {\n      axis\n        .tickSize(0)\n        .tickPadding(15);\n    }\n\n    if (xTicks) {\n      axis\n        .ticks(xTicks);\n    }\n\n    const group = root\n      .append('g')\n      .attr('class', 'x axis')\n      .attr('transform', `translate(0, ${h})`);\n\n    group\n      .call(axis);\n\n    if (label) {\n      group\n        .append('text')\n        .attr('class', 'label')\n        .attr('x',\n          (yAxisOrientRight)\n            ? 0\n            : w)\n        .attr('y', m.bottom - 10)\n        .style('text-anchor',\n          (yAxisOrientRight)\n            ? 'start'\n            : 'end')\n        .text(label);\n    }\n    return axis;\n  }\n\n  createYAxis({ root, m, w, y }) {\n    const {\n      yType,\n      axisLabels: { y: label },\n      yTicks,\n      grid,\n      tickTimeDisplayFormat,\n      yAxisOrientRight\n    } = this.props;\n\n    const axis = yAxisOrientRight ? axisRight(y) : axisLeft(y);\n\n    if (yType === 'time' && tickTimeDisplayFormat) {\n      axis\n        .tickFormat(timeFormat(tickTimeDisplayFormat));\n    }\n\n    if (grid) {\n      axis\n        .tickSize(-w, 6)\n        .tickPadding(12);\n    } else {\n      axis\n        .tickPadding(10);\n    }\n\n    if (yTicks) {\n      axis\n        .ticks(yTicks);\n    }\n\n    const group = root\n      .append('g')\n      .attr('class', 'y axis')\n      .attr('transform',\n        (yAxisOrientRight)\n          ? `translate(${w}, 0)`\n          : 'translate(0, 0)');\n\n    group\n      .call(axis);\n\n    if (label) {\n      group\n        .append('text')\n        .attr('class', 'label')\n        .attr('transform', 'rotate(-90)')\n        .attr('x', 0)\n        .attr('y',\n          (yAxisOrientRight)\n            ? -20 + m.right\n            : 0 - m.left)\n        .attr('dy', '.9em')\n        .style('text-anchor', 'end')\n        .text(label);\n    }\n\n    return axis;\n  }\n\n  createFill({ node, colors }) {\n    const uid = this.uid;\n\n    colors.forEach((color, i) => {\n      const gradient = select(node)\n        .append('defs')\n        .append('linearGradient')\n        .attr('id', `gradient-${i}-${uid}`)\n        .attr('x1', '0%')\n        .attr('x2', '0%')\n        .attr('y1', '40%')\n        .attr('y2', '100%');\n\n      defaultStyles[`.dot${i}`] = { fill: color };\n\n      gradient\n        .append('stop')\n        .attr('offset', '0%')\n        .attr('style', `stop-color:${color}; stop-opacity:0.6`);\n\n      gradient\n        .append('stop')\n        .attr('offset', '100%')\n        .attr('style', `stop-color:${color}; stop-opacity:0.4`);\n    });\n  }\n\n  createAreaPathChart({ root, h, x, y, xValue, yValue, colors }) {\n    const {\n      data,\n      interpolate,\n      noAreaGradient\n    } = this.props;\n\n    const uid = this.uid;\n\n    const getFill = (d, i) => (\n      (noAreaGradient)\n        ? colors[i]\n        : `url(#gradient-${i}-${uid})`\n    );\n\n    const getStroke = (d, i) => colors[i];\n\n    const areaPath = area()\n      .curve(interpolateLine(interpolate))\n      .x((d) => x(xValue(d)))\n      .y0(h)\n      .y1((d) => y(yValue(d)));\n\n    const linePath = line()\n      .curve(interpolateLine(interpolate))\n      .x((d) => x(xValue(d)))\n      .y((d) => y(yValue(d)));\n\n    const group = root\n      .append('g')\n      .attr('class', 'areaChart');\n\n    group\n      .selectAll('path.area')\n      .data(data)\n      .enter()\n      .append('path')\n      .attr('class', 'area')\n      .style('fill', getFill)\n      .attr('d', areaPath);\n\n    group\n      .selectAll('path.line')\n      .data(data)\n      .enter()\n      .append('path')\n      .attr('class', 'line')\n      .style('stroke', getStroke)\n      .attr('d', linePath);\n  }\n\n  createPoints({ root, x, y, colors }) {\n    const {\n      data,\n      xType,\n      yType,\n      mouseOverHandler,\n      mouseOutHandler,\n      mouseMoveHandler,\n      clickHandler\n    } = this.props;\n\n    /*\n     * We don't really need to do this, but it\n     * avoids obscure \"this\" below\n     */\n    const calculateDate = (v) => this.parseDate(v);\n\n    const getStroke = (d, i) => colors[i];\n\n    /*\n     * Creating the calculation functions\n     */\n    const calculateCX = (d) => (\n      (xType === 'time')\n        ? x(calculateDate(d.x))\n        : x(d.x));\n\n    const calculateCY = (d) => (\n      (yType === 'time')\n        ? y(calculateDate(d.y))\n        : y(d.y));\n\n    const mouseover = (d) => mouseOverHandler(d, lastEvent);\n    const mouseout = (d) => mouseOutHandler(d, lastEvent);\n    const mousemove = (d) => mouseMoveHandler(d, lastEvent);\n    const click = (d) => clickHandler(d, lastEvent);\n\n    const group = root\n      .append('g')\n      .attr('class', 'dataPoints');\n\n    data.forEach((item) => {\n      item.forEach((d) => {\n        /*\n         * Applying the calculation functions\n         */\n        group\n          .datum(d)\n          .append('circle')\n          .attr('class', 'data-point')\n          .style('strokeWidth', '2px')\n          .style('stroke', getStroke)\n          .style('fill', 'white')\n          .attr('cx', calculateCX)\n          .attr('cy', calculateCY)\n          .on('mouseover', mouseover)\n          .on('mouseout', mouseout)\n          .on('mousemove', mousemove)\n          .on('click', click);\n      });\n    });\n  }\n\n  createStyle() {\n    const {\n      style,\n      grid,\n      verticalGrid,\n      yAxisOrientRight,\n    } = this.props;\n\n    const uid = this.uid;\n    const scope = `.area-chart-${uid}`;\n    const axisStyles = getAxisStyles(grid, verticalGrid, yAxisOrientRight);\n    const rules = merge({}, defaultStyles, style, axisStyles);\n\n    return (\n      <Style\n        scopeSelector={scope}\n        rules={rules}\n      />\n    );\n  }\n\n  parseDate(v) {\n    const {\n      datePattern\n    } = this.props;\n\n    const datePatternParser = (\n      dateParser[datePattern] || (\n      dateParser[datePattern] = parse(datePattern)));\n\n    return datePatternParser(v);\n  }\n\n  calculateChartParameters() {\n    const {\n      data,\n      xType,\n      yType,\n      axes,\n      xDomainRange,\n      yDomainRange,\n      yAxisOrientRight,\n      areaColors,\n      margin,\n      width,\n      height\n    } = this.props;\n\n    /*\n     * We could \"bind\"!\n     */\n    const parseDate = (v) => this.parseDate(v);\n\n    /*\n     * 'w' and 'h' are the width and height of the graph canvas\n     * (excluding axes and other furniture)\n     */\n    const m = calculateMargin(axes, margin, yAxisOrientRight);\n    const w = reduce(width, m.left, m.right);\n    const h = reduce(height, m.top, m.bottom);\n\n    const x = createDomainRangeGenerator('x', xDomainRange, data, xType, w, parseDate);\n    const y = createDomainRangeGenerator('y', yDomainRange, data, yType, h, parseDate);\n\n    const xValue = createValueGenerator('x', xType, parseDate);\n    const yValue = createValueGenerator('y', yType, parseDate);\n\n    const colors = areaColors.concat(defaultColors);\n\n    const node = this.createSvgNode({ m, w, h });\n    const root = this.createSvgRoot({ node, m });\n\n    return {\n      m,\n      w,\n      h,\n      x,\n      y,\n      xValue,\n      yValue,\n      colors,\n      node,\n      root\n    };\n  }\n\n  render() {\n    const {\n      axes,\n      dataPoints,\n      noAreaGradient\n    } = this.props;\n\n    const hasFill = !noAreaGradient;\n    const p = this.calculateChartParameters();\n\n    if (axes) {\n      this.createXAxis(p);\n\n      this.createYAxis(p);\n    }\n\n    if (hasFill) {\n      this.createFill(p);\n    }\n\n    this.createAreaPathChart(p);\n\n    if (dataPoints) {\n      this.createPoints(p);\n    }\n\n    const uid = this.uid;\n    const className = `area-chart-${uid}`;\n    const {\n      node\n    } = p;\n\n    return (\n      <div ref=\"areaChart\" className={className}>\n        {this.createStyle()}\n        {node.toReact()}\n      </div>\n    );\n  }\n}\n"]}