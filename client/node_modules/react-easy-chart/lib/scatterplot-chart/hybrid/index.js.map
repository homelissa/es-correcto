{"version":3,"sources":["../../../modules/scatterplot-chart/hybrid/index.js"],"names":["dateParser","color","domain","axisMargin","ScatterplotChart","axes","bool","axisLabels","shape","x","string","y","clickHandler","func","config","array","data","isRequired","datePattern","yAxisOrientRight","dotRadius","number","verticalGrid","grid","height","useLegend","margin","object","mouseOverHandler","mouseOutHandler","mouseMoveHandler","style","tickTimeDisplayFormat","width","xDomainRange","yDomainRange","xTickNumber","yTickNumber","xTicks","yTicks","xType","yType","props","uid","initialise","ref","refs","scatterplotChart","transition","type","index","findIndex","item","configItem","getDataConfig","dataItem","z","rangeRadius","d","mn","mx","p","minRad","maxRad","rad","stroke","selectAll","axisType","domainRange","length","dataIndex","axis","minAmount","maxAmount","parseDate","v","map","range","padding","ticks","spacer","top","right","bottom","left","w","m","h","tickFormat","tickSize","tickPadding","innerW","calculateChartParameters","initialiseXAxis","initialiseYAxis","initialiseChart","xAxis","getXAxis","call","yAxis","getYAxis","calculateDate","calculateR","getRadius","calculateCX","calculateCY","getFill","getStroke","mouseOver","mouseOut","mouseMove","click","circle","getCircles","enter","append","attr","on","transitionXAxis","transitionYAxis","transitionChart","duration","n","exit","remove","node","Element","setAttribute","innerH","root","label","group","text","scope","axisStyles","rules","datePatternParser","calculateMargin","calculateInnerW","calculateInnerH","defaultXDomainRange","defaultYDomainRange","createDomainRangeGenerator","calculateXAxis","calculateYAxis","createSvgNode","createSvgRoot","createXAxis","createYAxis","createScatterplotChart","className","createStyle","toReact"],"mappings":"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","file":"index.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport {\n  scaleLinear as linear,\n  scalePoint as point\n} from 'd3-scale';\nimport {\n  event as lastEvent,\n  min,\n  max,\n  scaleOrdinal,\n  schemeCategory20,\n  range,\n  select,\n  axisBottom,\n  axisLeft,\n  axisRight,\n  scaleTime,\n  timeFormat\n} from 'd3';\nimport { timeParse as parse } from 'd3-time-format';\nimport { extent } from 'd3-array';\nimport ReactFauxDOM from 'react-faux-dom';\nimport PropTypes from 'prop-types';\nimport { Style } from 'radium';\nimport merge from 'lodash.merge';\nimport {\n  createUniqueID,\n  calculateDomainRange,\n  defaultStyles,\n  getAxisStyles,\n  createCircularTicks\n} from '../../shared';\n\nconst dateParser = {};\n\nconst color = scaleOrdinal(schemeCategory20).domain(range(0, 20));\n\nconst axisMargin = 18;\n\nexport default class ScatterplotChart extends PureComponent {\n  static get propTypes() {\n    return {\n      axes: PropTypes.bool,\n      axisLabels: PropTypes.shape({\n        x: PropTypes.string,\n        y: PropTypes.string\n      }),\n      clickHandler: PropTypes.func,\n      config: PropTypes.array,\n      data: PropTypes.array.isRequired,\n      datePattern: PropTypes.string,\n      yAxisOrientRight: PropTypes.bool,\n      dotRadius: PropTypes.number,\n      verticalGrid: PropTypes.bool,\n      grid: PropTypes.bool,\n      height: PropTypes.number,\n      useLegend: PropTypes.bool,\n      margin: PropTypes.object,\n      mouseOverHandler: PropTypes.func,\n      mouseOutHandler: PropTypes.func,\n      mouseMoveHandler: PropTypes.func,\n      style: PropTypes.object,\n      tickTimeDisplayFormat: PropTypes.string,\n      width: PropTypes.number,\n      xDomainRange: PropTypes.array,\n      yDomainRange: PropTypes.array,\n      xTickNumber: PropTypes.number,\n      yTickNumber: PropTypes.number,\n      xTicks: PropTypes.number,\n      yTicks: PropTypes.number,\n      xType: PropTypes.string,\n      yType: PropTypes.string\n    };\n  }\n\n  static get defaultProps() {\n    return {\n      axes: false,\n      axisLabels: {\n        x: '',\n        y: ''\n      },\n      clickHandler: () => {},\n      config: [],\n      datePattern: '%d-%b-%y',\n      dotRadius: 5,\n      grid: false,\n      mouseOverHandler: () => {},\n      mouseOutHandler: () => {},\n      mouseMoveHandler: () => {},\n      width: 320,\n      height: 180,\n      xType: 'linear',\n      yType: 'linear'\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    this.uid = createUniqueID(props);\n  }\n\n  componentDidMount() {\n    this.initialise();\n    const ref = this.refs.scatterplotChart;\n    createCircularTicks(ref);\n  }\n\n  componentDidUpdate() {\n    this.transition();\n    const ref = this.refs.scatterplotChart;\n    createCircularTicks(ref);\n  }\n\n  getScale(type) {\n    switch (type) {\n      case 'time':\n        return scaleTime();\n      case 'text':\n        return point();\n      default:\n        return linear();\n    }\n  }\n\n  getDataConfig(type) {\n    const {\n      config\n    } = this.props;\n\n    const index = config.findIndex((item) => item.type === type);\n    return config[index];\n  }\n\n  getFill(data) {\n    const configItem = this.getDataConfig(data.type);\n    return (configItem)\n      ? configItem.color\n      : color(data.type);\n  }\n\n  getRadius(data, dataItem, dotRadius) {\n    if (typeof data[0].z !== 'undefined') {\n      const rangeRadius = extent(data, (d) => d.z);\n      const mn = rangeRadius[0];\n      const mx = rangeRadius[1];\n      const p = ((dataItem.z - mn) / (mx - mn));\n      const minRad = 5;\n      const maxRad = 20;\n      const rad = minRad + ((maxRad - minRad) * p);\n      return rad;\n    }\n    return dotRadius;\n  }\n\n  getStroke(data) {\n    const configItem = this.getDataConfig(data.type);\n    return (configItem)\n      ? configItem.stroke\n      : 'none'; // typeof configItem !== 'undefined' ? configItem.stroke : 'none';\n  }\n\n  getCircles() {\n    const uid = this.uid;\n    return select(`#scatterplot-chart-${uid}`)\n      .selectAll('circle'); // '.dot'\n  }\n\n  getXAxis() {\n    const uid = this.uid;\n    return select(`#scatterplot-x-axis-${uid}`);\n  }\n\n  getYAxis() {\n    const uid = this.uid;\n    return select(`#scatterplot-y-axis-${uid}`);\n  }\n\n  createDomainRangeGenerator(axisType, domainRange, data, type, length, yAxisOrientRight) {\n    const dataIndex =\n      (axisType === 'x')\n        ? 'x'\n        : 'y';\n\n    let axis;\n    let minAmount;\n    let maxAmount;\n\n    const parseDate = (v) => this.parseDate(v);\n\n    switch (type) {\n      case 'text':\n        axis = point();\n        axis\n          .domain(data.map((d) => d[dataIndex]), 1)\n          .range([0, length])\n          .padding(1);\n        break;\n      case 'linear':\n        axis = linear();\n        minAmount = min(data, (d) => d[dataIndex]);\n        maxAmount = max(data, (d) => d[dataIndex]);\n        if (domainRange) {\n          axis\n            .domain(domainRange); // calculateDomainRange(domainRange, type, parseDate));\n        } else {\n          // set initial domain\n          axis\n            .domain([minAmount, maxAmount]);\n          // calculate 1 tick offset\n          const ticks = axis.ticks();\n\n          minAmount =\n            (yAxisOrientRight && axisType === 'x')\n              ? minAmount\n              : minAmount - (ticks[1] - ticks[0]);\n\n          maxAmount =\n            (yAxisOrientRight && axisType === 'x')\n              ? maxAmount + (ticks[1] - ticks[0])\n              : maxAmount;\n\n          axis\n            .domain([minAmount, maxAmount]);\n        }\n        axis\n          .range(\n            (axisType === 'x')\n              ? [0, length]\n              : [length, 0]);\n        break;\n      case 'time':\n        axis = scaleTime();\n        axis\n          .domain(\n            (domainRange)\n              ? calculateDomainRange(domainRange)\n              : extent(data, (d) => parseDate(d[dataIndex])))\n          .range(\n            (axisType === 'x')\n              ? [0, length]\n              : [length, 0]);\n        break;\n      default:\n        break;\n    }\n    return axis;\n  }\n\n  calculateMargin(axes, spacer, yAxisOrientRight) {\n    if (yAxisOrientRight) {\n      return (axes)\n        ? { top: 24, right: 48, bottom: 24, left: 24 }\n        : { top: spacer, right: spacer, bottom: spacer, left: spacer };\n    }\n    return (axes)\n      ? { top: 24, right: 24, bottom: 24, left: 48 }\n      : { top: spacer, right: spacer, bottom: spacer, left: spacer };\n  }\n\n  calculateInnerW(w, m) {\n    return (w - (m.left + m.right));\n  }\n\n  calculateInnerH(h, m) {\n    const {\n      dotRadius\n    } = this.props;\n\n    return (h - (m.top + m.bottom + (dotRadius * 2)));\n  }\n\n  calculateXAxis({ h, x }) {\n    const {\n      xType,\n      tickTimeDisplayFormat,\n      xTickNumber,\n      grid,\n      verticalGrid,\n      xTicks\n    } = this.props;\n\n    const axis = axisBottom(x);\n\n    if (xType === 'time' && tickTimeDisplayFormat) {\n      axis\n        .tickFormat(timeFormat(tickTimeDisplayFormat));\n    }\n\n    if (xTickNumber) {\n      axis\n        .ticks(xTickNumber);\n    }\n\n    if (grid && verticalGrid) {\n      axis\n        .tickSize(-h, 6)\n        .tickPadding(15);\n    } else {\n      axis\n        .tickSize(0)\n        .tickPadding(15);\n    }\n\n    if (xTicks) {\n      axis\n        .ticks(xTicks);\n    }\n\n    return axis;\n  }\n\n  calculateYAxis({ y, innerW }) {\n    const {\n      grid,\n      yTicks,\n      yAxisOrientRight\n    } = this.props;\n\n    const axis = yAxisOrientRight ? axisRight(y) : axisLeft(y);\n\n    if (grid) {\n      axis\n        .tickSize(-innerW, 6)\n        .tickPadding(12);\n    } else {\n      axis\n        .tickPadding(10);\n    }\n\n    if (yTicks) {\n      axis\n        .ticks(yTicks);\n    }\n\n    return axis;\n  }\n\n  initialise() {\n    const {\n      axes\n    } = this.props;\n\n    const p = this.calculateChartParameters();\n\n    if (axes) {\n      this.initialiseXAxis(p);\n\n      this.initialiseYAxis(p);\n    }\n\n    this.initialiseChart(p);\n  }\n\n  initialiseXAxis({ xAxis }) {\n    this.getXAxis()\n      .call(xAxis);\n  }\n\n  initialiseYAxis({ yAxis }) {\n    this.getYAxis()\n      .call(yAxis);\n  }\n\n  initialiseChart({ x, y }) {\n    const {\n      data,\n      dotRadius,\n      xType,\n      mouseOverHandler,\n      mouseOutHandler,\n      mouseMoveHandler,\n      clickHandler\n    } = this.props;\n\n    const calculateDate = (v) => this.parseDate(v);\n\n    const calculateR = (d) => this.getRadius(data, d, dotRadius);\n    const calculateCX = (d) => (\n        (xType === 'time')\n          ? x(calculateDate(d.x))\n          : x(d.x));\n    const calculateCY = (d) => y(d.y);\n\n    const getFill = (d) => this.getFill(d);\n    const getStroke = (d) => this.getStroke(d);\n\n    const mouseOver = (d) => mouseOverHandler(d, lastEvent);\n    const mouseOut = (d) => mouseOutHandler(d, lastEvent);\n    const mouseMove = (d) => mouseMoveHandler(d, lastEvent);\n    const click = (d) => clickHandler(d, lastEvent);\n\n    const circle = this.getCircles()\n      .data(data);\n\n    circle\n      .enter()\n      .append('circle')\n      .attr('class', 'dot')\n      .attr('r', calculateR)\n      .attr('cx', calculateCX)\n      .attr('cy', calculateCY)\n      .style('fill', getFill)\n      .style('stroke', getStroke)\n      .on('mouseover', mouseOver)\n      .on('mouseout', mouseOut)\n      .on('mousemove', mouseMove)\n      .on('click', click);\n  }\n\n  transition() {\n    const {\n      axes\n    } = this.props;\n\n    const p = this.calculateChartParameters();\n\n    if (axes) {\n      this.transitionXAxis(p);\n\n      this.transitionYAxis(p);\n    }\n\n    this.transitionChart(p);\n  }\n\n  transitionXAxis({ xAxis }) {\n    this.getXAxis()\n      .transition()\n      .duration(750)\n      .call(xAxis);\n  }\n\n  transitionYAxis({ yAxis }) {\n    this.getYAxis()\n      .transition()\n      .duration(750)\n      .call(yAxis);\n  }\n\n  transitionChart({ x, y }) {\n    const {\n      data,\n      dotRadius,\n      xType,\n      mouseOverHandler,\n      mouseOutHandler,\n      mouseMoveHandler,\n      clickHandler\n    } = this.props;\n\n    const calculateDate = (v) => this.parseDate(v);\n\n    const calculateR = (d) => this.getRadius(data, d, dotRadius);\n    const calculateCX = (d) => (\n        (xType === 'time')\n          ? x(calculateDate(d.x))\n          : x(d.x));\n    const calculateCY = (d) => y(d.y);\n\n    const mouseOver = (d) => mouseOverHandler(d, lastEvent);\n    const mouseOut = (d) => mouseOutHandler(d, lastEvent);\n    const mouseMove = (d) => mouseMoveHandler(d, lastEvent);\n    const click = (d) => clickHandler(d, lastEvent);\n\n    const getFill = (d) => this.getFill(d);\n    const getStroke = (d) => this.getStroke(d);\n\n    const n = data.length;\n    const circle = this.getCircles()\n      .data(data);\n\n    if (n) {\n      circle\n        .transition()\n        .duration(750)\n        .attr('r', calculateR)\n        .attr('cx', calculateCX)\n        .attr('cy', calculateCY);\n\n      circle\n        .style('fill', getFill)\n        .style('stroke', getStroke)\n        .on('mouseover', mouseOver)\n        .on('mouseout', mouseOut)\n        .on('mousemove', mouseMove)\n        .on('click', click);\n\n      circle\n        .enter()\n        .append('circle')\n        .attr('class', 'dot')\n        .attr('r', calculateR)\n        .attr('cx', calculateCX)\n        .attr('cy', calculateCY)\n        .style('fill', getFill)\n        .style('stroke', getStroke)\n        .on('mouseover', mouseOver)\n        .on('mouseout', mouseOut)\n        .on('mousemove', mouseMove)\n        .on('click', click);\n    }\n\n    circle\n      .exit()\n      .remove();\n  }\n\n  createSvgNode({ m, w, h }) {\n    const node = new ReactFauxDOM.Element('svg');\n    node.setAttribute('width', w + m.left + m.right);\n    node.setAttribute('height', h + m.top + m.bottom);\n    return node;\n  }\n\n  createSvgRoot({ node, m }) {\n    return select(node)\n      .append('g')\n      .attr('transform', `translate(${m.left}, ${m.top})`);\n  }\n\n  createXAxis({ m, innerW, innerH, root }) {\n    const {\n      yAxisOrientRight,\n      axisLabels: { x: label }\n    } = this.props;\n\n    const uid = this.uid;\n\n    const group = root\n      .append('g')\n      .attr('class', 'x axis')\n      .attr('id', `scatterplot-x-axis-${uid}`)\n      .attr('transform', `translate(0, ${innerH})`);\n\n    if (label) {\n      group\n        .append('text')\n        .attr('class', 'label')\n        .attr('x',\n            (yAxisOrientRight)\n              ? 0\n              : innerW)\n        .attr('y', m.bottom + axisMargin)\n        .style('text-anchor',\n            (yAxisOrientRight)\n              ? 'start'\n              : 'end')\n        .text(label);\n    }\n  }\n\n  createYAxis({ m, innerW, root }) {\n    const {\n      yAxisOrientRight,\n      axisLabels: { y: label }\n    } = this.props;\n\n    const uid = this.uid;\n\n    const group = root\n      .append('g')\n      .attr('class', 'y axis')\n      .attr('id', `scatterplot-y-axis-${uid}`)\n      .attr('transform',\n        (yAxisOrientRight)\n          ? `translate(${innerW}, 0)`\n          : 'translate(0, 0)');\n\n    if (label) {\n      group\n        .append('text')\n        .attr('class', 'label')\n        .attr('transform', 'rotate(-90)')\n        .attr('y',\n          (yAxisOrientRight)\n            ? -25 + m.right\n            : 10 - m.left\n        )\n        .attr('dy', '.71em')\n        .style('text-anchor', 'end')\n        .text(label);\n    }\n  }\n\n  createScatterplotChart({ root }) {\n    const uid = this.uid;\n\n    root\n      .append('g')\n      .attr('id', `scatterplot-chart-${uid}`);\n  }\n\n  createStyle() {\n    const {\n      style,\n      grid,\n      verticalGrid,\n      yAxisOrientRight\n    } = this.props;\n\n    const uid = this.uid;\n    const scope = `.scatterplot-chart-${uid}`;\n    const axisStyles = getAxisStyles(grid, verticalGrid, yAxisOrientRight);\n    const rules = merge({}, defaultStyles, style, axisStyles);\n\n    return (\n      <Style\n        scopeSelector={scope}\n        rules={rules}\n      />\n    );\n  }\n\n  parseDate(v) {\n    const {\n      datePattern\n    } = this.props;\n\n    const datePatternParser = (\n      dateParser[datePattern] || (\n      dateParser[datePattern] = parse(datePattern)));\n\n    return datePatternParser(v);\n  }\n\n  calculateChartParameters() {\n    const {\n      axes,\n      data,\n      margin,\n      width,\n      height,\n      dotRadius,\n      xType,\n      yType,\n      xDomainRange,\n      yDomainRange,\n      yAxisOrientRight\n    } = this.props;\n\n    /*\n     * We could \"bind\"!\n     */\n    const parseDate = (v) => this.parseDate(v);\n\n    const m = margin || this.calculateMargin(axes, dotRadius * 2, yAxisOrientRight);\n    const w = width;\n    const h = height + (dotRadius * 3);\n\n    const innerW = this.calculateInnerW(width, m);\n    const innerH = this.calculateInnerH(height, m);\n\n    const defaultXDomainRange = calculateDomainRange(xDomainRange, xType, parseDate);\n    const defaultYDomainRange = calculateDomainRange(yDomainRange, yType, parseDate);\n\n    const x = this.createDomainRangeGenerator(\n      'x', defaultXDomainRange, data, xType, innerW, yAxisOrientRight);\n    const y = this.createDomainRangeGenerator(\n      'y', defaultYDomainRange, data, yType, innerH, yAxisOrientRight);\n\n    const xAxis = this.calculateXAxis({ m, h, x, innerW });\n    const yAxis = this.calculateYAxis({ m, y, innerW });\n\n    const node = this.createSvgNode({ m, w, h });\n    const root = this.createSvgRoot({ node, m });\n\n    return {\n      m,\n      w,\n      h,\n      innerW,\n      innerH,\n      x,\n      y,\n      xAxis,\n      yAxis,\n      node,\n      root\n    };\n  }\n\n  render() {\n    const {\n      axes\n    } = this.props;\n\n    const p = this.calculateChartParameters();\n\n    if (axes) {\n      this.createXAxis(p);\n\n      this.createYAxis(p);\n    }\n\n    this.createScatterplotChart(p);\n\n    const uid = this.uid;\n    const className = `scatterplot-chart-${uid}`;\n    const {\n      node\n    } = p;\n\n    return (\n      <div ref=\"scatterplotChart\" className={className}>\n        {this.createStyle()}\n        {node.toReact()}\n      </div>\n    );\n  }\n}\n"]}