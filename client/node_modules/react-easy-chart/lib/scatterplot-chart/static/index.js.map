{"version":3,"sources":["../../../modules/scatterplot-chart/static/index.js"],"names":["dateParser","color","domain","axisMargin","ScatterplotChart","axes","bool","axisLabels","shape","x","string","y","clickHandler","func","config","array","data","isRequired","datePattern","yAxisOrientRight","dotRadius","number","verticalGrid","grid","height","useLegend","margin","object","mouseOverHandler","mouseOutHandler","mouseMoveHandler","style","tickTimeDisplayFormat","width","xDomainRange","yDomainRange","xTickNumber","yTickNumber","xTicks","yTicks","xType","yType","props","uid","ref","refs","scatterplotChart","type","index","findIndex","item","configItem","getDataConfig","dataItem","z","rangeRadius","d","mn","mx","p","minRad","maxRad","rad","stroke","axisType","domainRange","length","dataIndex","axis","minAmount","maxAmount","parseDate","v","map","range","padding","ticks","spacer","top","right","bottom","left","w","m","h","tickFormat","tickSize","tickPadding","innerW","node","Element","setAttribute","append","attr","innerH","xAxis","root","label","group","call","text","yAxis","calculateDate","calculateR","getRadius","calculateCX","calculateCY","getFill","getStroke","mouseOver","mouseOut","mouseMove","click","circle","selectAll","enter","on","exit","remove","scope","axisStyles","rules","datePatternParser","calculateMargin","calculateInnerW","calculateInnerH","defaultXDomainRange","defaultYDomainRange","createDomainRangeGenerator","calculateXAxis","calculateYAxis","createSvgNode","createSvgRoot","calculateChartParameters","createXAxis","createYAxis","createScatterplotChart","className","createStyle","toReact"],"mappings":"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","file":"index.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport {\n  scaleLinear as linear,\n  scalePoint as point\n} from 'd3-scale';\nimport {\n  event as lastEvent,\n  min,\n  max,\n  scaleOrdinal,\n  schemeCategory20,\n  range,\n  select,\n  scaleTime,\n  axisBottom,\n  axisLeft,\n  axisRight,\n  timeFormat\n} from 'd3';\nimport { timeParse as parse } from 'd3-time-format';\nimport { extent } from 'd3-array';\nimport ReactFauxDOM from 'react-faux-dom';\nimport PropTypes from 'prop-types';\nimport { Style } from 'radium';\nimport merge from 'lodash.merge';\nimport {\n  createUniqueID,\n  calculateDomainRange,\n  defaultStyles,\n  getAxisStyles,\n  createCircularTicks\n} from '../../shared';\n\nconst dateParser = {};\n\nconst color = scaleOrdinal(schemeCategory20).domain(range(0, 20));\n\nconst axisMargin = 18;\n\nexport default class ScatterplotChart extends PureComponent {\n  static get propTypes() {\n    return {\n      axes: PropTypes.bool,\n      axisLabels: PropTypes.shape({\n        x: PropTypes.string,\n        y: PropTypes.string\n      }),\n      clickHandler: PropTypes.func,\n      config: PropTypes.array,\n      data: PropTypes.array.isRequired,\n      datePattern: PropTypes.string,\n      yAxisOrientRight: PropTypes.bool,\n      dotRadius: PropTypes.number,\n      verticalGrid: PropTypes.bool,\n      grid: PropTypes.bool,\n      height: PropTypes.number,\n      useLegend: PropTypes.bool,\n      margin: PropTypes.object,\n      mouseOverHandler: PropTypes.func,\n      mouseOutHandler: PropTypes.func,\n      mouseMoveHandler: PropTypes.func,\n      style: PropTypes.object,\n      tickTimeDisplayFormat: PropTypes.string,\n      width: PropTypes.number,\n      xDomainRange: PropTypes.array,\n      yDomainRange: PropTypes.array,\n      xTickNumber: PropTypes.number,\n      yTickNumber: PropTypes.number,\n      xTicks: PropTypes.number,\n      yTicks: PropTypes.number,\n      xType: PropTypes.string,\n      yType: PropTypes.string\n    };\n  }\n\n  static get defaultProps() {\n    return {\n      axes: false,\n      axisLabels: {\n        x: '',\n        y: ''\n      },\n      clickHandler: () => {},\n      config: [],\n      datePattern: '%d-%b-%y',\n      dotRadius: 5,\n      grid: false,\n      mouseOverHandler: () => {},\n      mouseOutHandler: () => {},\n      mouseMoveHandler: () => {},\n      width: 320,\n      height: 180,\n      xType: 'linear',\n      yType: 'linear'\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    this.uid = createUniqueID(props);\n  }\n\n  componentDidMount() {\n    const ref = this.refs.scatterplotChart;\n    createCircularTicks(ref);\n  }\n\n  componentDidUpdate() {\n    const ref = this.refs.scatterplotChart;\n    createCircularTicks(ref);\n  }\n\n  getScale(type) {\n    switch (type) {\n      case 'time':\n        return scaleTime();\n      case 'text':\n        return point();\n      default:\n        return linear();\n    }\n  }\n\n  getDataConfig(type) {\n    const {\n      config\n    } = this.props;\n\n    const index = config.findIndex((item) => item.type === type);\n    return config[index];\n  }\n\n  getFill(data) {\n    const configItem = this.getDataConfig(data.type);\n    return (configItem)\n      ? configItem.color\n      : color(data.type);\n  }\n\n  getRadius(data, dataItem, dotRadius) {\n    if (typeof data[0].z !== 'undefined') {\n      const rangeRadius = extent(data, (d) => d.z);\n      const mn = rangeRadius[0];\n      const mx = rangeRadius[1];\n      const p = ((dataItem.z - mn) / (mx - mn));\n      const minRad = 5;\n      const maxRad = 20;\n      const rad = minRad + ((maxRad - minRad) * p);\n      return rad;\n    }\n    return dotRadius;\n  }\n\n  getStroke(data) {\n    const configItem = this.getDataConfig(data.type);\n    return (configItem)\n      ? configItem.stroke\n      : 'none'; // typeof configItem !== 'undefined' ? configItem.stroke : 'none';\n  }\n\n  createDomainRangeGenerator(axisType, domainRange, data, type, length, yAxisOrientRight) {\n    const dataIndex =\n      (axisType === 'x')\n        ? 'x'\n        : 'y';\n\n    let axis;\n    let minAmount;\n    let maxAmount;\n\n    const parseDate = (v) => this.parseDate(v);\n\n    switch (type) {\n      case 'text':\n        axis = point();\n        axis\n          .domain(data.map((d) => d[dataIndex])) // , 1)\n          .range([0, length])\n          .padding(1);\n        break;\n      case 'linear':\n        axis = linear();\n        minAmount = min(data, (d) => d[dataIndex]);\n        maxAmount = max(data, (d) => d[dataIndex]);\n        if (domainRange) {\n          axis\n            .domain(domainRange); // calculateDomainRange(domainRange, type, parseDate));\n        } else {\n          // set initial domain\n          axis\n            .domain([minAmount, maxAmount]);\n          // calculate 1 tick offset\n          const ticks = axis.ticks();\n\n          minAmount =\n            (yAxisOrientRight && axisType === 'x')\n              ? minAmount\n              : minAmount - (ticks[1] - ticks[0]);\n\n          maxAmount =\n            (yAxisOrientRight && axisType === 'x')\n              ? maxAmount + (ticks[1] - ticks[0])\n              : maxAmount;\n\n          axis\n            .domain([minAmount, maxAmount]);\n        }\n        axis\n          .range(\n            (axisType === 'x')\n              ? [0, length]\n              : [length, 0]);\n        break;\n      case 'time':\n        axis = scaleTime();\n        axis\n          .domain(\n            (domainRange)\n              ? calculateDomainRange(domainRange)\n              : extent(data, (d) => parseDate(d[dataIndex])))\n          .range(\n            (axisType === 'x')\n              ? [0, length]\n              : [length, 0]);\n        break;\n      default:\n        break;\n    }\n    return axis;\n  }\n\n  calculateMargin(axes, spacer, yAxisOrientRight) {\n    if (yAxisOrientRight) {\n      return (axes)\n        ? { top: 24, right: 48, bottom: 24, left: 24 }\n        : { top: spacer, right: spacer, bottom: spacer, left: spacer };\n    }\n    return (axes)\n      ? { top: 24, right: 24, bottom: 24, left: 48 }\n      : { top: spacer, right: spacer, bottom: spacer, left: spacer };\n  }\n\n  calculateInnerW(w, m) {\n    return (w - (m.left + m.right));\n  }\n\n  calculateInnerH(h, m) {\n    const {\n      dotRadius\n    } = this.props;\n\n    return (h - (m.top + m.bottom + (dotRadius * 2)));\n  }\n\n  calculateXAxis({ h, x }) {\n    const {\n      xType,\n      tickTimeDisplayFormat,\n      xTickNumber,\n      grid,\n      verticalGrid,\n      xTicks\n    } = this.props;\n\n    const axis = axisBottom(x);\n\n    if (xType === 'time' && tickTimeDisplayFormat) {\n      axis\n        .tickFormat(timeFormat(tickTimeDisplayFormat));\n    }\n\n    if (xTickNumber) {\n      axis\n        .ticks(xTickNumber);\n    }\n\n    if (grid && verticalGrid) {\n      axis\n        .tickSize(-h, 6)\n        .tickPadding(15);\n    } else {\n      axis\n        .tickSize(0)\n        .tickPadding(15);\n    }\n\n    if (xTicks) {\n      axis\n        .ticks(xTicks);\n    }\n\n    return axis;\n  }\n\n  calculateYAxis({ y, innerW }) {\n    const {\n      grid,\n      yTicks,\n      yAxisOrientRight\n    } = this.props;\n\n    const axis = yAxisOrientRight ? axisRight(y) : axisLeft(y);\n\n    if (grid) {\n      axis\n        .tickSize(-innerW, 6)\n        .tickPadding(12);\n    } else {\n      axis\n        .tickPadding(10);\n    }\n\n    if (yTicks) {\n      axis\n        .ticks(yTicks);\n    }\n\n    return axis;\n  }\n\n  createSvgNode({ m, w, h }) {\n    const node = new ReactFauxDOM.Element('svg');\n    node.setAttribute('width', w + m.left + m.right);\n    node.setAttribute('height', h + m.top + m.bottom);\n    return node;\n  }\n\n  createSvgRoot({ node, m }) {\n    return select(node)\n      .append('g')\n      .attr('transform', `translate(${m.left}, ${m.top})`);\n  }\n\n  createXAxis({ m, innerW, innerH, xAxis, root }) {\n    const {\n      yAxisOrientRight,\n      axisLabels: { x: label }\n    } = this.props;\n\n    const group = root\n      .append('g')\n      .attr('class', 'x axis')\n      .attr('transform', `translate(0, ${innerH})`);\n\n    group\n      .call(xAxis);\n\n    if (label) {\n      group\n        .append('text')\n        .attr('class', 'label')\n        .attr('x',\n            (yAxisOrientRight)\n              ? 0\n              : innerW)\n        .attr('y', m.bottom + axisMargin)\n        .style('text-anchor',\n            (yAxisOrientRight)\n              ? 'start'\n              : 'end')\n        .text(label);\n    }\n  }\n\n  createYAxis({ m, innerW, yAxis, root }) {\n    const {\n      yAxisOrientRight,\n      axisLabels: { y: label }\n    } = this.props;\n\n    const group = root\n      .append('g')\n      .attr('class', 'y axis')\n      .attr('transform',\n        (yAxisOrientRight)\n          ? `translate(${innerW}, 0)`\n          : 'translate(0, 0)');\n\n    group\n      .call(yAxis);\n\n    if (label) {\n      group\n        .append('text')\n        .attr('class', 'label')\n        .attr('transform', 'rotate(-90)')\n        .attr('y',\n          (yAxisOrientRight)\n            ? -25 + m.right\n            : 10 - m.left\n        )\n        .attr('dy', '.71em')\n        .style('text-anchor', 'end')\n        .text(label);\n    }\n  }\n\n  createScatterplotChart({ x, y, root }) {\n    const {\n      data,\n      dotRadius,\n      xType,\n      mouseOverHandler,\n      mouseOutHandler,\n      mouseMoveHandler,\n      clickHandler\n    } = this.props;\n\n    const calculateDate = (v) => this.parseDate(v);\n\n    const calculateR = (d) => this.getRadius(data, d, dotRadius);\n    const calculateCX = (d) => (\n        (xType === 'time')\n          ? x(calculateDate(d.x))\n          : x(d.x));\n    const calculateCY = (d) => y(d.y);\n\n    const getFill = (d) => this.getFill(d);\n    const getStroke = (d) => this.getStroke(d);\n\n    const mouseOver = (d) => mouseOverHandler(d, lastEvent);\n    const mouseOut = (d) => mouseOutHandler(d, lastEvent);\n    const mouseMove = (d) => mouseMoveHandler(d, lastEvent);\n    const click = (d) => clickHandler(d, lastEvent);\n\n    const circle = root\n      .append('g')\n      .selectAll('circle') // '.dot'\n      .data(data);\n\n    circle\n      .enter()\n      .append('circle')\n      .attr('class', 'dot')\n      .attr('r', calculateR)\n      .attr('cx', calculateCX)\n      .attr('cy', calculateCY)\n      .style('fill', getFill)\n      .style('stroke', getStroke)\n      .on('mouseover', mouseOver)\n      .on('mouseout', mouseOut)\n      .on('mousemove', mouseMove)\n      .on('click', click);\n\n    circle\n      .exit()\n      .remove();\n  }\n\n  createStyle() {\n    const {\n      style,\n      grid,\n      verticalGrid,\n      yAxisOrientRight\n    } = this.props;\n\n    const uid = this.uid;\n    const scope = `.scatterplot-chart-${uid}`;\n    const axisStyles = getAxisStyles(grid, verticalGrid, yAxisOrientRight);\n    const rules = merge({}, defaultStyles, style, axisStyles);\n\n    return (\n      <Style\n        scopeSelector={scope}\n        rules={rules}\n      />\n    );\n  }\n\n  parseDate(v) {\n    const {\n      datePattern\n    } = this.props;\n\n    const datePatternParser = (\n      dateParser[datePattern] || (\n      dateParser[datePattern] = parse(datePattern)));\n\n    return datePatternParser(v);\n  }\n\n  calculateChartParameters() {\n    const {\n      axes,\n      data,\n      margin,\n      width,\n      height,\n      dotRadius,\n      xType,\n      yType,\n      xDomainRange,\n      yDomainRange,\n      yAxisOrientRight\n    } = this.props;\n\n    /*\n     * We could \"bind\"!\n     */\n    const parseDate = (v) => this.parseDate(v);\n\n    const m = margin || this.calculateMargin(axes, dotRadius * 2, yAxisOrientRight);\n    const w = width;\n    const h = height + (dotRadius * 3);\n\n    const innerW = this.calculateInnerW(width, m);\n    const innerH = this.calculateInnerH(height, m);\n\n    const defaultXDomainRange = calculateDomainRange(xDomainRange, xType, parseDate);\n    const defaultYDomainRange = calculateDomainRange(yDomainRange, yType, parseDate);\n\n    const x = this.createDomainRangeGenerator(\n      'x', defaultXDomainRange, data, xType, innerW, yAxisOrientRight);\n    const y = this.createDomainRangeGenerator(\n      'y', defaultYDomainRange, data, yType, innerH, yAxisOrientRight);\n\n    const xAxis = this.calculateXAxis({ m, h, x, innerW });\n    const yAxis = this.calculateYAxis({ m, y, innerW });\n\n    const node = this.createSvgNode({ m, w, h });\n    const root = this.createSvgRoot({ node, m });\n\n    return {\n      m,\n      w,\n      h,\n      innerW,\n      innerH,\n      x,\n      y,\n      xAxis,\n      yAxis,\n      node,\n      root\n    };\n  }\n\n  render() {\n    const {\n      axes\n    } = this.props;\n\n    const p = this.calculateChartParameters();\n\n    if (axes) {\n      this.createXAxis(p);\n\n      this.createYAxis(p);\n    }\n\n    this.createScatterplotChart(p);\n\n    const uid = this.uid;\n    const className = `scatterplot-chart-${uid}`;\n    const {\n      node\n    } = p;\n\n    return (\n      <div ref=\"scatterplotChart\" className={className}>\n        {this.createStyle()}\n        {node.toReact()}\n      </div>\n    );\n  }\n}\n"]}