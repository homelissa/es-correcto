{"version":3,"sources":["../../../modules/line-chart/hybrid/index.js"],"names":["LineChart","props","uid","chart","refs","initialise","transition","style","grid","vGrid","hGrid","orient","scope","defaultAxisStyles","rules","width","height","className","createStyle","propTypes","data","array","isRequired","axes","bool","type","string","xType","yType","interpolate","margin","shape","top","number","right","bottom","left","colors","strokeWidth","stroke","object","xLabel","yLabel","xDomain","yDomain","pattern","xPattern","yPattern","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport {\n  createUniqueID,\n  defaultStyles,\n  getDefaultAxisStyles\n} from './LineChart/common';\nimport PropTypes from 'prop-types';\nimport { Style } from 'radium';\nimport merge from 'lodash.merge';\n\nimport lineChart from './LineChart';\n\nexport default class LineChart extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.uid = createUniqueID();\n  }\n\n  componentDidMount() {\n    const {\n      chart\n    } = this.refs;\n\n    const props = this.props;\n\n    lineChart.initialise(chart, props);\n  }\n\n  componentDidUpdate() {\n    const {\n      chart\n    } = this.refs;\n\n    const props = this.props;\n\n    lineChart.transition(chart, props);\n  }\n\n  createStyle() {\n    const {\n      style,\n      grid,\n      vGrid,\n      hGrid,\n      orient\n    } = this.props;\n\n    const uid = this.uid;\n    const scope = `.line-chart-${uid}`;\n    const defaultAxisStyles = getDefaultAxisStyles(vGrid || grid, hGrid || grid, orient);\n    const rules = merge({}, defaultStyles, style, defaultAxisStyles);\n\n    return (\n      <Style\n        scopeSelector={scope}\n        rules={rules}\n      />\n    );\n  }\n\n  render() {\n    const {\n      width,\n      height\n    } = this.props;\n\n    const uid = this.uid;\n    const className = `line-chart-${uid}`;\n\n    return (\n      <div ref=\"lineChart\" className={className}>\n        {this.createStyle()}\n        <svg ref=\"chart\" width={width} height={height} />\n      </div>\n    );\n  }\n}\n\nLineChart.propTypes = {\n  data: PropTypes.array.isRequired,\n  axes: PropTypes.bool,\n  grid: PropTypes.bool,\n  hGrid: PropTypes.bool,\n  vGrid: PropTypes.bool,\n  type: PropTypes.string,\n  xType: PropTypes.string,\n  yType: PropTypes.string,\n  interpolate: PropTypes.string,\n  margin: PropTypes.shape({\n    top: PropTypes.number,\n    right: PropTypes.number,\n    bottom: PropTypes.number,\n    left: PropTypes.number\n  }),\n  width: PropTypes.number,\n  height: PropTypes.number,\n  orient: PropTypes.string,\n  colors: PropTypes.array,\n  strokeWidth: PropTypes.number,\n  stroke: PropTypes.object,\n  style: PropTypes.object,\n  xLabel: PropTypes.string,\n  yLabel: PropTypes.string,\n  xDomain: PropTypes.array,\n  yDomain: PropTypes.array,\n  pattern: PropTypes.string,\n  xPattern: PropTypes.string,\n  yPattern: PropTypes.string\n};\n\nLineChart.defaultProps = {\n  type: 'linear',\n  xType: 'linear',\n  yType: 'linear',\n  interpolate: 'linear',\n  margin: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  },\n  orient: 'left',\n  colors: [],\n  strokeWidth: 2,\n  style: {}\n};\n"]}