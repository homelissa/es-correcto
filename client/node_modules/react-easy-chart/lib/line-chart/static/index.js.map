{"version":3,"sources":["../../../modules/line-chart/static/index.js"],"names":["dateParser","LineChart","data","array","isRequired","width","number","height","xType","string","yType","datePattern","interpolate","style","object","margin","axes","bool","grid","verticalGrid","xDomainRange","yDomainRange","tickTimeDisplayFormat","yTicks","xTicks","dataPoints","lineColors","axisLabels","shape","x","y","yAxisOrientRight","mouseOverHandler","func","mouseOutHandler","mouseMoveHandler","clickHandler","props","uid","lineChart","refs","m","w","h","node","Element","setAttribute","left","right","top","bottom","append","attr","root","label","axis","tickFormat","tickSize","tickPadding","ticks","group","call","text","xValue","yValue","colors","getStroke","d","i","linePath","curve","selectAll","enter","calculateDate","v","parseDate","calculateCX","calculateCY","mouseover","mouseout","mousemove","click","forEach","item","datum","on","scope","axisStyles","rules","datePatternParser","concat","createSvgNode","createSvgRoot","p","calculateChartParameters","createXAxis","createYAxis","createLinePathChart","createPoints","className","createStyle","toReact"],"mappings":"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","file":"index.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport ReactFauxDOM from 'react-faux-dom';\nimport {\n  event as lastEvent,\n  select,\n  axisBottom,\n  axisLeft,\n  axisRight,\n  line,\n  timeFormat\n} from 'd3';\nimport {\n  createUniqueID,\n  reduce,\n  calculateMargin,\n  createValueGenerator,\n  createDomainRangeGenerator,\n  defaultColors,\n  defaultStyles,\n  getAxisStyles,\n  createCircularTicks\n} from '../../shared';\nimport interpolateLine from '../../interpolate';\nimport PropTypes from 'prop-types';\nimport { Style } from 'radium';\nimport merge from 'lodash.merge';\nimport { timeParse as parse } from 'd3-time-format';\n\nconst dateParser = {};\n\nexport default class LineChart extends PureComponent {\n  static get propTypes() {\n    return {\n      data: PropTypes.array.isRequired,\n      width: PropTypes.number,\n      height: PropTypes.number,\n      xType: PropTypes.string,\n      yType: PropTypes.string,\n      datePattern: PropTypes.string,\n      interpolate: PropTypes.string,\n      style: PropTypes.object,\n      margin: PropTypes.object,\n      axes: PropTypes.bool,\n      grid: PropTypes.bool,\n      verticalGrid: PropTypes.bool,\n      xDomainRange: PropTypes.array,\n      yDomainRange: PropTypes.array,\n      tickTimeDisplayFormat: PropTypes.string,\n      yTicks: PropTypes.number,\n      xTicks: PropTypes.number,\n      dataPoints: PropTypes.bool,\n      lineColors: PropTypes.array,\n      axisLabels: PropTypes.shape({\n        x: PropTypes.string,\n        y: PropTypes.string\n      }),\n      yAxisOrientRight: PropTypes.bool,\n      mouseOverHandler: PropTypes.func,\n      mouseOutHandler: PropTypes.func,\n      mouseMoveHandler: PropTypes.func,\n      clickHandler: PropTypes.func\n    };\n  }\n\n  static get defaultProps() {\n    return {\n      width: 200,\n      height: 150,\n      datePattern: '%d-%b-%y',\n      interpolate: 'linear',\n      axes: false,\n      xType: 'linear',\n      yType: 'linear',\n      lineColors: [],\n      axisLabels: {\n        x: '',\n        y: ''\n      },\n      mouseOverHandler: () => {},\n      mouseOutHandler: () => {},\n      mouseMoveHandler: () => {},\n      clickHandler: () => {}\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    this.uid = createUniqueID();\n  }\n\n  componentDidMount() {\n    const lineChart = this.refs.lineChart;\n    createCircularTicks(lineChart);\n  }\n\n  componentDidUpdate() {\n    const lineChart = this.refs.lineChart;\n    createCircularTicks(lineChart);\n  }\n\n  createSvgNode({ m, w, h }) {\n    const node = new ReactFauxDOM.Element('svg');\n    node.setAttribute('width', w + m.left + m.right);\n    node.setAttribute('height', h + m.top + m.bottom);\n    return node;\n  }\n\n  createSvgRoot({ node, m }) {\n    return select(node)\n      .append('g')\n      .attr('transform', `translate(${m.left}, ${m.top})`);\n  }\n\n  createXAxis({ root, m, w, h, x }) {\n    const {\n      xType,\n      axisLabels: { x: label },\n      xTicks,\n      grid,\n      verticalGrid,\n      tickTimeDisplayFormat,\n      yAxisOrientRight\n    } = this.props;\n\n    const axis = axisBottom(x);\n\n    if (xType === 'time' && tickTimeDisplayFormat) {\n      axis\n        .tickFormat(timeFormat(tickTimeDisplayFormat));\n    }\n\n    if (grid && verticalGrid) {\n      axis\n        .tickSize(-h, 6)\n        .tickPadding(10);\n    } else {\n      axis\n        .tickSize(0, 6)\n        .tickPadding(16); // wut\n    }\n\n    if (xTicks) {\n      axis\n        .ticks(xTicks);\n    }\n\n    const group = root\n      .append('g')\n      .attr('class', 'x axis')\n      .attr('transform', `translate(0, ${h})`);\n\n    group\n      .call(axis);\n\n    if (label) {\n      group\n        .append('text')\n        .attr('class', 'label')\n        .attr('x',\n          (yAxisOrientRight)\n            ? 0\n            : w)\n        .attr('y', (m.bottom - m.top))\n        .attr('dx',\n          (yAxisOrientRight)\n            ? '0em'\n            : '-.175em')\n        .attr('dy', '-.175em')\n        .style('dominant-baseline', 'ideographic')\n        .style('text-anchor',\n          (yAxisOrientRight)\n            ? 'start'\n            : 'end')\n        .text(label);\n    }\n  }\n\n  createYAxis({ root, m, w, y }) {\n    const {\n      yType,\n      axisLabels: { y: label },\n      yTicks,\n      grid,\n      tickTimeDisplayFormat,\n      yAxisOrientRight\n    } = this.props;\n\n    const axis = yAxisOrientRight ? axisRight(y) : axisLeft(y);\n\n    if (yType === 'time' && tickTimeDisplayFormat) {\n      axis\n        .tickFormat(timeFormat(tickTimeDisplayFormat));\n    }\n\n    if (grid) {\n      axis\n        .tickSize(-w, 6)\n        .tickPadding(10);\n    } else {\n      axis\n        .tickSize(0, 6)\n        .tickPadding(16); // wut\n    }\n\n    if (yTicks) {\n      axis\n        .ticks(yTicks);\n    }\n\n    const group = root\n      .append('g')\n      .attr('class', 'y axis')\n      .attr('transform',\n        (yAxisOrientRight)\n          ? `translate(${w}, 0)`\n          : 'translate(0, 0)');\n\n    group\n      .call(axis);\n\n    if (label) {\n      group\n        .append('text')\n        .attr('class', 'label')\n        .attr('transform', 'rotate(-90)')\n        .attr('x', 0)\n        .attr('y',\n          (yAxisOrientRight)\n            ? +m.right - m.left\n            : -m.left + m.right)\n        .attr('dx', 0)\n        .attr('dy',\n          (yAxisOrientRight)\n            ? '-.175em'\n            : '1em')\n        .style('dominant-baseline', 'ideographic')\n        .style('text-anchor', 'end')\n        .text(label);\n    }\n  }\n\n  createLinePathChart({ root, x, y, xValue, yValue, colors }) {\n    const {\n      data,\n      interpolate\n    } = this.props;\n\n    const getStroke = (d, i) => colors[i];\n\n    const linePath = line()\n      .curve(interpolateLine(interpolate))\n      .x((d) => x(xValue(d)))\n      .y((d) => y(yValue(d)));\n\n    const group = root\n      .append('g')\n      .attr('class', 'lineChart');\n\n    group\n      .selectAll('path')\n      .data(data)\n      .enter()\n      .append('path')\n      .attr('class', 'line')\n      .style('stroke', getStroke)\n      .attr('d', linePath);\n  }\n\n  createPoints({ root, x, y, colors }) {\n    const {\n      data,\n      xType,\n      yType,\n      mouseOverHandler,\n      mouseOutHandler,\n      mouseMoveHandler,\n      clickHandler\n    } = this.props;\n\n    /*\n     * We don't really need to do this, but it\n     * avoids obscure \"this\" below\n     */\n    const calculateDate = (v) => this.parseDate(v);\n\n    const getStroke = (d, i) => colors[i];\n\n    /*\n     * Creating the calculation functions\n     */\n    const calculateCX = (d) => (\n      (xType === 'time')\n        ? x(calculateDate(d.x))\n        : x(d.x));\n    const calculateCY = (d) => (\n      (yType === 'time')\n        ? y(calculateDate(d.y))\n        : y(d.y));\n\n    const mouseover = (d) => mouseOverHandler(d, lastEvent);\n    const mouseout = (d) => mouseOutHandler(d, lastEvent);\n    const mousemove = (d) => mouseMoveHandler(d, lastEvent);\n    const click = (d) => clickHandler(d, lastEvent);\n\n    const group = root\n      .append('g')\n      .attr('class', 'dataPoints');\n\n    data.forEach((item) => {\n      item.forEach((d) => {\n        /*\n         * Applying the calculation functions\n         */\n        group\n          .datum(d)\n          .append('circle')\n          .attr('class', 'data-point')\n          .style('strokeWidth', '2px')\n          .style('stroke', getStroke)\n          .style('fill', 'white')\n          .attr('cx', calculateCX)\n          .attr('cy', calculateCY)\n          .on('mouseover', mouseover)\n          .on('mouseout', mouseout)\n          .on('mousemove', mousemove)\n          .on('click', click);\n      });\n    });\n  }\n\n  createStyle() {\n    const {\n      style,\n      grid,\n      verticalGrid,\n      yAxisOrientRight\n    } = this.props;\n\n    const uid = this.uid;\n    const scope = `.line-chart-${uid}`;\n    const axisStyles = getAxisStyles(grid, verticalGrid, yAxisOrientRight);\n    const rules = merge({}, defaultStyles, style, axisStyles);\n\n    return (\n      <Style\n        scopeSelector={scope}\n        rules={rules}\n      />\n    );\n  }\n\n  parseDate(v) {\n    const {\n      datePattern\n    } = this.props;\n\n    const datePatternParser = (\n      dateParser[datePattern] || (\n      dateParser[datePattern] = parse(datePattern)));\n\n    return datePatternParser(v);\n  }\n\n  calculateChartParameters() {\n    const {\n      data,\n      axes,\n      xType,\n      yType,\n      xDomainRange,\n      yDomainRange,\n      margin,\n      width,\n      height,\n      lineColors,\n      yAxisOrientRight\n    } = this.props;\n\n    /*\n     * We could \"bind\"!\n     */\n    const parseDate = (v) => this.parseDate(v);\n\n    /*\n     * 'w' and 'h' are the width and height of the graph canvas\n     * (excluding axes and other furniture)\n     */\n    const m = calculateMargin(axes, margin, yAxisOrientRight);\n    const w = reduce(width, m.left, m.right);\n    const h = reduce(height, m.top, m.bottom);\n\n    const x = createDomainRangeGenerator('x', xDomainRange, data, xType, w, parseDate);\n    const y = createDomainRangeGenerator('y', yDomainRange, data, yType, h, parseDate);\n\n    const xValue = createValueGenerator('x', xType, parseDate);\n    const yValue = createValueGenerator('y', yType, parseDate);\n\n    const colors = lineColors.concat(defaultColors);\n\n    const node = this.createSvgNode({ m, w, h });\n    const root = this.createSvgRoot({ node, m });\n\n    return {\n      m,\n      w,\n      h,\n      x,\n      y,\n      xValue,\n      yValue,\n      colors,\n      node,\n      root\n    };\n  }\n\n  render() {\n    const {\n      axes,\n      dataPoints\n    } = this.props;\n\n    const p = this.calculateChartParameters();\n\n    if (axes) {\n      this.createXAxis(p);\n\n      this.createYAxis(p);\n    }\n\n    this.createLinePathChart(p);\n\n    if (dataPoints) {\n      this.createPoints(p);\n    }\n\n    const uid = this.uid;\n    const className = `line-chart-${uid}`;\n    const {\n      node\n    } = p;\n\n    return (\n      <div ref=\"lineChart\" className={className}>\n        {this.createStyle()}\n        {node.toReact()}\n      </div>\n    );\n  }\n}\n"]}